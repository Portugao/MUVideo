<?php
/**
 * MUVideo.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package MUVideo
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.6.2 (http://modulestudio.de).
 */

/**
 * User controller class providing navigation and interaction functionality.
 */
class MUVideo_Controller_User extends MUVideo_Controller_Base_User
{
    /**
     * This method is the default function handling the user area called without defining arguments.
     *
     *
     * @return mixed Output.
     */
    public function main()
    {
        // parameter specifying which type of objects we are treating
        $objectType = $this->request->query->filter('ot', 'collection', FILTER_SANITIZE_STRING);
        
        $permLevel = ACCESS_OVERVIEW;
        $this->throwForbiddenUnless(SecurityUtil::checkPermission($this->name . '::', '::', $permLevel), LogUtil::getErrorMsgPermission());
        
        $redirectUrl = ModUtil::url($this->name, 'user', 'view', array('lct' => 'admin'));
        
        return $this->redirect($redirectUrl);
    }
    
    /**
     * This method provides a handling of edit requests.
     *
     * @param string  $ot           Treated object type.
     * @param string  $tpl          Name of alternative template (to be used instead of the default template).
     * @param boolean $raw          Optional way to display a template instead of fetching it (required for standalone output).
     *
     * @return mixed Output.
     */
    public function getVideos()
    {
        $controllerHelper = new MUVideo_Util_Controller($this->serviceManager);
    
        // parameter specifying which type of objects we are treating
        $objectType = $this->request->query->filter('ot', 'collection', FILTER_SANITIZE_STRING);
        $utilArgs = array('controller' => 'user', 'action' => 'getVideos');
        if (!in_array($objectType, $controllerHelper->getObjectTypes('controllerAction', $utilArgs))) {
            $objectType = $controllerHelper->getDefaultObjectType('controllerAction', $utilArgs);
        }
        $permLevel = ACCESS_EDIT;
        $this->throwForbiddenUnless(SecurityUtil::checkPermission($this->name . ':' . ucfirst($objectType) . ':', '::', $permLevel), LogUtil::getErrorMsgPermission());
    
        // redirect to entity controller
    
        System::queryStringSetVar('lct', 'user');
        $this->request->query->set('lct', 'user');
    
        return ModUtil::func($this->name, $objectType, 'getVideos', array('lct' => 'user'));
    }
}

{# purpose of this template: collections display view #}
{% set baseTemplate = app.request.query.getBoolean('raw', false) ? 'raw' : (routeArea == 'admin' ? 'adminBase' : 'base') %}
{% extends 'MUVideoModule::' ~ baseTemplate ~ '.html.twig' %}
{% block pageTitle %}{{ collection.getTitleFromDisplayPattern()|default(__('Collection')) }}{% endblock %}
{% block title %}
    {% set templateTitle = collection.getTitleFromDisplayPattern()|default(__('Collection')) %}
    {{ templateTitle|notifyFilters('muvideomodule.filter_hooks.collections.filter') }}
    {% set itemActions = knp_menu_get('MUVideoModule:ItemActionsMenu:menu', [], { entity: collection, area: routeArea, context: 'display' }) %}
    <div class="dropdown">
        <a id="itemActions{{ collection.id }}DropDownToggle" role="button" data-toggle="dropdown" data-target="#" href="javascript:void(0);" class="hidden dropdown-toggle"><i class="fa fa-tasks"></i> {{ __('Actions') }} <span class="caret"></span></a>
        {{ knp_menu_render(itemActions, { template: 'ZikulaMenuModule:Override:actions.html.twig' }) }}
    </div>
{% endblock %}
{% block admin_page_icon 'eye' %}
{% block content %}
    {% set isQuickView = app.request.query.getBoolean('raw', false) %}
    <div class="muvideomodule-collection muvideomodule-display">

    <div class="row">
        <div class="col-sm-9">
    <dl>
        {% if collection.title is not empty %}
            <dt>{{ __('Title') }}</dt>
            <dd>{{ collection.title }}</dd>
        {% endif %}
        {% if collection.description is not empty %}
            <dt>{{ __('Description') }}</dt>
            <dd>{{ collection.description|safeHtml }}</dd>
        {% endif %}
        
    </dl>
    
    {% set getVideos = hasPermission('MUVideoModule::', '::', 'ACCESS_ADMIN') %}
    {% if getVideos %}
        <p class="managelink">
            {% set getVideos = __('Get Videos') %}
            <a href="{{ path('muvideomodule_collection_' ~ routeArea ~ 'getVideos', { 'collectionId': collection.id }) }}" title="{{ getVideos|e('html_attr') }}" class="fa fa-plus">{{ getVideos }}</a>
        </p>
    {% endif %}

    {% if featureActivationHelper.isEnabled(constant('MU\\VideoModule\\Helper\\FeatureActivationHelper::CATEGORIES'), 'collection') %}
        {{ include('@MUVideoModule/Helper/includeCategoriesDisplay.html.twig', { obj: collection }) }}
    {% endif %}
    {{ include('@MUVideoModule/Helper/includeStandardFieldsDisplay.html.twig', { obj: collection }) }}

    {{ block('display_hooks') }}
        </div>
        <div class="col-sm-3">
            {{ block('related_items') }}
        </div>
    </div>
</div>
{% endblock %}
{% block related_items %}
    {% if routeArea == 'admin' %}
        <h4>{{ __('Movies') }}</h4>
    {% else %}
        <h3>{{ __('Movies') }}</h3>
    {% endif %}
    
    {% if collection.movie|default %}
        {{ include(
            '@MUVideoModule/Movie/includeDisplayItemListMany.html.twig',
            { items: collection.movie }
        ) }}
    {% endif %}
    
    {% set mayManage = hasPermission('MUVideoModule:Movie:', '::', 'ACCESS_EDIT') %}
    {% if mayManage %}
        <p class="managelink">
            {% set createTitle = __('Create movie') %}
            <a href="{{ path('muvideomodule_movie_' ~ routeArea ~ 'edit', { collection: collection.id }) }}" title="{{ createTitle|e('html_attr') }}" class="fa fa-plus">{{ createTitle }}</a>
        </p>
    {% endif %}
    {% if routeArea == 'admin' %}
        <h4>{{ __('Playlists') }}</h4>
    {% else %}
        <h3>{{ __('Playlists') }}</h3>
    {% endif %}
    
    {% if collection.playlists|default %}
        {{ include(
            '@MUVideoModule/Playlist/includeDisplayItemListMany.html.twig',
            { items: collection.playlists }
        ) }}
    {% endif %}
    
    {% set mayManage = hasPermission('MUVideoModule:Playlist:', '::', 'ACCESS_EDIT') %}
    {% if mayManage %}
        <p class="managelink">
            {% set createTitle = __('Create playlist') %}
            <a href="{{ path('muvideomodule_playlist_' ~ routeArea ~ 'edit', { collection: collection.id }) }}" title="{{ createTitle|e('html_attr') }}" class="fa fa-plus">{{ createTitle }}</a>
        </p>
    {% endif %}
{% endblock %}
{% block display_hooks %}
    {% set hooks = notifyDisplayHooks(eventName='muvideomodule.ui_hooks.collections.display_view', id=collection.id, urlObject=currentUrlObject) %}
    {% for providerArea, hook in hooks if providerArea != 'provider.scribite.ui_hooks.editor' %}
        <h4>{{ providerArea }}</h4>
        {{ hook }}
    {% endfor %}
{% endblock %}
